@using Web.Helpers;

@model PaginatedList<Core.Models.Db.Gear>

@{
	ViewData["Title"] = "Экзотическое снаряжение";
}
<div class="container-fluid background">
	<h1>@ViewData["Title"]</h1>
	@if (User.IsInRole("Admin"))
	{
		<p>
			<a class="btn btn-sm btn-primary" asp-action="Create">Добавить</a>
		</p>
	}
	<form asp-action="Index" method="get">
		<div class="form-actions no-color">
			<p>
				Поиск по названию или типу: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
				<input type="submit" value="Поиск" class="btn btn-outline-primary" /> |
				<a asp-action="Index">Назад к полному списку</a>
			</p>
		</div>
	</form>
	<table class="table table-hover">
		<thead>
			<tr>
				<th>
					<a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Название</a>
				</th>
				<th>
					Тип
				</th>
				<th>
					Иконка
				</th>
				<th>
					Скриншот
				</th>
				<th>
					<a asp-action="Index" asp-route-sortOrder="@ViewData["CatalystSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> Катализатор</a>
				</th>
				<th>
					Действия
				</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var item in Model)
			{
				<tr>
					<td>
						@Html.DisplayFor(modelItem => item.Name)
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Type)
					</td>
					<td>
						<img src="@Html.DisplayFor(modelItem => item.IconUrl)" alt="@Html.DisplayFor(modelItem=> item.Name)" width="50">
					</td>
					<td>
						<a href="@Html.DisplayFor(modelItem => item.ImageUrl)">Скриншот</a>
					</td>
					<td>
						@Html.DisplayFor(modelItem => item.Catalyst)
					</td>
					<td>
						<a class="btn btn-sm btn-primary" asp-action="Details" asp-route-id="@item.Id">Подробней</a>
						@if (User.IsInRole("Admin"))
						{
							<a class="btn btn-sm btn-primary" asp-action="Edit" asp-route-id="@item.Id">Редактировать</a>
							<a class="btn btn-sm btn-danger" asp-action="Delete" asp-route-id="@item.Id">Удалить</a>
						}

					</td>
				</tr>
			}
		</tbody>
	</table>
	@{
		var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
		var nextDisabled = !Model.HasNextPage ? "disabled" : "";
	}

	<a asp-action="Index"
	   asp-route-sortOrder="@ViewData["CurrentSort"]"
	   asp-route-pageNumber="@(Model.PageIndex - 1)"
	   asp-route-currentFilter="@ViewData["CurrentFilter"]"
	   class="btn btn-secondary @prevDisabled">
		<
	</a>
	<a asp-action="Index"
	   asp-route-sortOrder="@ViewData["CurrentSort"]"
	   asp-route-pageNumber="@(Model.PageIndex + 1)"
	   asp-route-currentFilter="@ViewData["CurrentFilter"]"
	   class="btn btn-secondary @nextDisabled">
		>
	</a>
</div>